/*Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.
Approach - 
Using Boyer Moore Voting algorithm.
*/
class Solution {
    public List<Integer> majorityElement(int[] nums) {
        List<Integer> ans=new ArrayList<>();
        Integer candidate1=null,candidate2=null,count1=0,count2=0;
        for(Integer i :nums)
        {
                
            if(i.equals(candidate1)) {      
            count1++;
            }
            else if(i.equals(candidate2)) count2++;
            else if(count1==0) {
                candidate1=i;
                count1++;
            }
            else if(count2==0)
            {
                candidate2=i;
                count2++;
            }
            else
            {
                count1--;
                count2--;
            }
        }
        count1=0;count2=0;
        for(Integer i:nums)
        {
            if(i.equals(candidate1)) count1++;
            if(i.equals(candidate2)) count2++;
        }
        
        if(count1>nums.length/3)
            ans.add(candidate1);
        if(count2>nums.length/3)
            ans.add(candidate2);
        return ans;
    }
}
